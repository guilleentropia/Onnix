@model IEnumerable<ProyectoFinal.MVC5.ViewModels.ProductoViewModel>

@{
    if (Session["UserId"] == "sanjuan")
    {


        if (Session["UserPerfil"] == "vendedor")
        {
            Layout = "~/Views/Shared/_SanJuanVendedor.cshtml";

        }

        if (Session["UserPerfil"] == "Administrador")
        {
            Layout = "~/Views/Shared/_SanJuanAdministrador.cshtml";

        }
    }

    if (Session["UserId"] == "mendoza")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";

        if (Session["UserPerfil"] == "vendedor")
        {
            Layout = "~/Views/Shared/_MendozaVendedor.cshtml";

        }

        if (Session["UserPerfil"] == "Administrador")
        {
            Layout = "~/Views/Shared/_MendozaAdministrador.cshtml";

        }
    }

    if (Session["UserId"] == null && Session["UserPerfil"] == null)
    {
        Response.Redirect("~/Account/Login");
    }



    ViewBag.Title = "Index";
}

<h2>Productos</h2>

<p>
    @Html.ActionLink("Agregar Producto", "Create", null, new { @class = "k-button" })



</p>


@(Html.Kendo().Grid(Model)
      .Name("Grid")
      .Columns(columns =>
      {
          columns.Bound(p => p.Codigo).Title("Codigo").HtmlAttributes(new { style = "font-size:12px;" });
          columns.Bound(p => p.Descripcion).Title("Producto").HtmlAttributes(new { style = "font-size:12px;" });
          
          columns.Bound(p => p.PrecioVenta).Title("Venta").HtmlAttributes(new { style = "font-size:12px;" });
          columns.Bound(p => p.Talle).Title("Talle").HtmlAttributes(new { style = "font-size:12px;" });
          columns.Bound(p => p.Stock);

          columns.Bound(c => c.Imagen).Template(@<text>

            <img src="@Url.Action("getImg", "Producto", new {id = @item.Id })" alt="Person Image" width="60" height="60" />

        </text>).Filterable(false).Sortable(false);
          columns.Bound(p => p.CategoriaProducto.Descripcion).Title("Categoria").HtmlAttributes(new { style = "font-size:12px;" });
          columns.Bound(p => p.MarcaProducto.Descripcion).Title("Marca").HtmlAttributes(new { style = "font-size:12px;" });
          columns.Bound(p => p.TerceroProducto.NombreCompleto).Title("Proveedor").HtmlAttributes(new { style = "font-size:12px;" });

          columns.Template(@<text>
            @Html.ActionLink(" ", "Edit", new { id = @item.Id }, new { style = "background: url('" + Url.Content("~/Images/note48.png") + "')no-repeat center right; display: inline-block; height: 18px;width:18px;" })
            ||
            @Html.ActionLink(" ", "Details", new { id = @item.Id }, new { style = "background: url('" + Url.Content("~/Images/details.png") + "')no-repeat center right; display:inline-block;  height: 18px; width:18px;" })
            ||
            @Html.ActionLink(" ", "Delete", new { id = @item.Id }, new { style = "background: url('" + Url.Content("~/Images/delete.png") + "')no-repeat center right; display:inline-block;  height: 18px;width:18px;" })
        </text>).Title("Acciones" );
      })
                                      .Pageable()
                                      .Sortable()
                                      .Scrollable()
                                                      .Resizable(r => r.Columns(true))
                    
                    .ColumnResizeHandleWidth(10)
                                    .HtmlAttributes(new { style = "height: 450px; " })
                                                      
                                      .DataSource(p => p.Server().PageSize(4))
                                      .Filterable(f =>
                                              f.Operators(o => o.ForString(s => s
                                        .Clear()
                                        .IsEqualTo("Es igual a")
                                        .Contains("Contiene")
                                        .StartsWith("Comienza con")
                                        )
                                        .ForNumber(s => s
                                        .Clear()
                                        .IsEqualTo("Es igual a"))).Messages(a =>
                                            a.And("Y")
                                            .Cancel("Cancelar")
                                            .Or("O")
                                            .Clear("Limpiar")
                                            .Filter("Filtrar")
                                            .Info("Seleccione los valores a Filtrar")
                                            )))




