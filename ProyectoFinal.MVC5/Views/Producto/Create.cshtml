@model ProyectoFinal.MVC5.ViewModels.ProductoViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Agregar Producto</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Descripcion)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrecioCompra, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrecioCompra, new {@class = "k-textbox"})
                @Html.ValidationMessageFor(model => model.PrecioCompra)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PrecioVenta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrecioVenta, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.PrecioVenta)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Stock)
            </div>
        </div>

        <div class="form-group">
           
            <div class="col-md-10">
               @Html.LabelFor(model => model.Imagen, new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="file" name="file" id="file" width="100" class="hidden" />
                    <label for="file">Haga click aqui, para seleccionar una imagen</label>


                    @Html.ValidationMessageFor(model => model.Imagen)
                </div>
               
               
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("CategoriaId")
                .DataTextField("Descripcion")
                .DataValueField("Id")
                .OptionLabel("Seleccione una Categoria")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerCategoria", "Producto");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )




                @Html.ValidationMessageFor(model => model.CategoriaId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Marca", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("MarcaId")
                .DataTextField("Descripcion")
                .DataValueField("Id")
                .OptionLabel("Seleccione una Marca")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerMarca", "Producto");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )





                @Html.ValidationMessageFor(model => model.MarcaId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Proveedor", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("TerceroId")
                .DataTextField("NombreCompleto")
                .DataValueField("Id")
                .OptionLabel("Seleccione un Proveedor")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerTercero", "Producto");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )





                @Html.ValidationMessageFor(model => model.TerceroId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
               @(Html.Kendo().Button()
                 .Name("imageButton")
                 .Content("Guardar"))
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al Listado", "Index", null, new { @class = "k-button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
