@model ProyectoFinal.MVC5.ViewModels.TransaccionViewModel

@{
    
    if (Session["UserId"] == "sanjuan")
    {
        Layout = "~/Views/Shared/_OtroLayout.cshtml";
    }

    if (Session["UserId"] == "mendoza")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    if (Session["UserId"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    
    
    ViewBag.Title = "Create";
}

<h2>Agregar Transaccion</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true)
        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fecha, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Fecha)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Total, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Total)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("UsuarioId")
                .DataTextField("NombreUsuario")
                .DataValueField("Id")
                .OptionLabel("Seleccione un Usuario")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerUsuarios", "Transaccion");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )



                @Html.ValidationMessageFor(model => model.UsuarioId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tercero", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("TerceroId")
                .DataTextField("NombreCompleto")
                .DataValueField("Id")
                .OptionLabel("Seleccione un Tercero")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerTerceros", "Transaccion");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )





                @Html.ValidationMessageFor(model => model.TerceroId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Numero de Factura", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("FacturaId")
                .DataTextField("NumeroFactura")
                .DataValueField("Id")
                .OptionLabel("Seleccione un Numero de Factura")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerFacturas", "Transaccion");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )




                @Html.ValidationMessageFor(model => model.FacturaId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de Transaccion", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("TipoTransaccionId")
                .DataTextField("Descripcion")
                .DataValueField("Id")
                .OptionLabel("Seleccione un Tipo de Transaccion")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerTipoTransaccion", "Transaccion");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )



                @Html.ValidationMessageFor(model => model.TipoTransaccionId)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Forma de Pago", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DropDownList()
                .HtmlAttributes(new { style = "width:400px" })
                .Name("FormaPagoId")
                .DataTextField("Descripcion")
                .DataValueField("Id")
                .OptionLabel("Seleccione una Forma de Pago")
                .DataSource(source =>
                {
                    source.Read(read =>
                       {
                           read.Action("ObtenerFormaPago", "Transaccion");
                       })
                  .ServerFiltering(true);
                })
                 .SelectedIndex(0)
                )




                @Html.ValidationMessageFor(model => model.FormaPagoId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @(Html.Kendo().Button()
                 .Name("imageButton")
                 .Content("Guardar"))
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al Listado", "Index", null, new { @class = "k-button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
