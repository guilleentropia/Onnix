@model ProyectoFinal.MVC5.ViewModels.TerceroViewModel

@{
    
    if (Session["UserId"] == "sanjuan")
    {


        if (Session["UserPerfil"] == "vendedor")
        {
            Layout = "~/Views/Shared/_SanJuanVendedor.cshtml";

        }

        if (Session["UserPerfil"] == "Administrador")
        {
            Layout = "~/Views/Shared/_SanJuanAdministrador.cshtml";

        }
    }

    if (Session["UserId"] == "mendoza")
    {
        Layout = "~/Views/Shared/_Layout.cshtml";

        if (Session["UserPerfil"] == "vendedor")
        {
            Layout = "~/Views/Shared/_MendozaVendedor.cshtml";

        }

        if (Session["UserPerfil"] == "Administrador")
        {
            Layout = "~/Views/Shared/_MendozaAdministrador.cshtml";

        }
    }

    if (Session["UserId"] == null && Session["UserPerfil"] == null)
    {
        Response.Redirect("~/Account/Login");
    }
    
    ViewBag.Title = "Edit";
}

<h2>Modificar Tercero</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Apellido, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Apellido, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Apellido)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nombre, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Nombre)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dni, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Dni, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Dni)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Domicilio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Domicilio, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Domicilio)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Celular, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Celular)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Mail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Mail, new { @class = "k-textbox" })
                @Html.ValidationMessageFor(model => model.Mail)
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Tipo de Tercero", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TipoTerceroId", string.Empty)
                @Html.ValidationMessageFor(model => model.TipoTerceroId)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @(Html.Kendo().Button()
                 .Name("imageButton")
                 .Content("Guardar"))
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver al Listado", "Index", null, new { @class = "k-button" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
